val VALID : tactic -> tactic = <fun>
val then_ : tactic -> tactic -> tactic = <fun>
val thenl_ : tactic -> tactic list -> tactic = <fun>
val orelse_ : tactic -> tactic -> tactic = <fun>
val FAIL_TAC : string -> tactic = <fun>
val NO_TAC : tactic = <fun>
val ALL_TAC : tactic = <fun>
val TRY : tactic -> tactic = <fun>
val REPEAT : tactic -> tactic = <fun>
val EVERY : tactic list -> tactic = <fun>
val FIRST : tactic list -> tactic = <fun>
val MAP_EVERY : ('a -> tactic) -> 'a list -> tactic = <fun>
val MAP_FIRST : ('a -> tactic) -> 'a list -> tactic = <fun>
val CHANGED_TAC : tactic -> tactic = <fun>
val REPLICATE_TAC : int -> tactic -> tactic = <fun>
val FIND_ASSUM : thm_tactic -> term -> tactic = <fun>
val POP_ASSUM : thm_tactic -> tactic = <fun>
val ASSUM_LIST : (thm list -> tactic) -> tactic = <fun>
val POP_ASSUM_LIST : (thm list -> tactic) -> tactic = <fun>
val EVERY_ASSUM : thm_tactic -> tactic = <fun>
val FIRST_ASSUM : thm_tactic -> tactic = <fun>
val RULE_ASSUM_TAC : (thm -> thm) -> tactic = <fun>
val USE_THEN : string -> thm_tactic -> tactic = <fun>
val REMOVE_THEN : string -> thm_tactic -> tactic = <fun>
val ASM : (thm list -> tactic) -> thm list -> tactic = <fun>
val HYP : (thm list -> tactic) -> string -> thm list -> tactic = <fun>
val CONV_TAC : conv -> tactic = <fun>
val REFL_TAC : tactic = <fun>
val ABS_TAC : tactic = <fun>
val MK_COMB_TAC : tactic = <fun>
val AP_TERM_TAC : tactic = <fun>
val AP_THM_TAC : tactic = <fun>
val BINOP_TAC : tactic = <fun>
val SUBST_ALL_TAC : thm -> tactic = <fun>
val BETA_TAC : tactic = <fun>
val SUBST_VAR_TAC : thm -> tactic = <fun>
val DISCH_TAC : tactic = <fun>
val EQ_TAC : tactic = <fun>
val UNDISCH_TAC : term -> tactic = <fun>
val SPEC_TAC : term * term -> tactic = <fun>
val X_GEN_TAC : term -> tactic = <fun>
val EXISTS_TAC : term -> tactic = <fun>
val GEN_TAC : tactic = <fun>
val CONJ_TAC : tactic = <fun>
val DISJ1_TAC : tactic = <fun>
val DISJ2_TAC : tactic = <fun>
val TRANS_TAC : thm -> term -> tactic = <fun>
val DISCH_THEN : thm_tactic -> tactic = <fun>
val STRIP_GOAL_THEN : thm_tactic -> tactic = <fun>
val STRIP_TAC : tactic = <fun>
val UNDISCH_THEN : term -> thm_tactic -> tactic = <fun>
val FIRST_X_ASSUM : thm_tactic -> tactic = <fun>
val SUBGOAL_THEN : term -> thm_tactic -> tactic = <fun>
val SUBGOAL_TAC : string -> term -> tactic list -> tactic = <fun>
val X_META_EXISTS_TAC : term -> tactic = <fun>
val META_SPEC_TAC : term -> thm -> tactic = <fun>
val CHEAT_TAC : tactic = <fun>
val RECALL_ACCEPT_TAC : ('a -> thm) -> 'a -> goal -> goalstate = <fun>
val ANTS_TAC : tactic = <fun>
val mk_goalstate : goal -> goalstate = <fun>
val ITAUT_TAC : tactic = <fun>
val GEN_REWRITE_TAC : (conv -> conv) -> thm list -> tactic = <fun>
val PURE_REWRITE_TAC : thm list -> tactic = <fun>
val REWRITE_TAC : thm list -> tactic = <fun>
val PURE_ONCE_REWRITE_TAC : thm list -> tactic = <fun>
val ONCE_REWRITE_TAC : thm list -> tactic = <fun>
val PURE_ASM_REWRITE_TAC : thm list -> tactic = <fun>
val ASM_REWRITE_TAC : thm list -> tactic = <fun>
val PURE_ONCE_ASM_REWRITE_TAC : thm list -> tactic = <fun>
val ONCE_ASM_REWRITE_TAC : thm list -> tactic = <fun>
val SIMP_TAC : thm list -> tactic = <fun>
val PURE_SIMP_TAC : thm list -> tactic = <fun>
val ONCE_SIMP_TAC : thm list -> tactic = <fun>
val ASM_SIMP_TAC : thm list -> tactic = <fun>
val PURE_ASM_SIMP_TAC : thm list -> tactic = <fun>
val ONCE_ASM_SIMP_TAC : thm list -> tactic = <fun>
val EXPAND_TAC : string -> tactic = <fun>
val FIX_TAC : string -> tactic = <fun>
val INTRO_TAC : string -> tactic = <fun>
val MONO_TAC : goal -> goalstate = <fun>
val BOOL_CASES_TAC : term -> tactic = <fun>
val ASM_CASES_TAC : term -> tactic = <fun>
val COND_CASES_TAC : tactic = <fun>
val SELECT_ELIM_TAC : tactic = <fun>
val GEN_MESON_TAC : int -> int -> int -> thm list -> tactic = <fun>
val ASM_MESON_TAC : thm list -> tactic = <fun>
val MESON_TAC : thm list -> tactic = <fun>
val IMP_REWRITE_TAC : thm list -> tactic = <fun>
val TARGET_REWRITE_TAC : thm list -> thm -> tactic = <fun>
val HINT_EXISTS_TAC : tactic = <fun>
val SEQ_IMP_REWRITE_TAC : thm list -> tactic = <fun>
val CASE_REWRITE_TAC : thm -> tactic = <fun>
val LET_TAC : tactic = <fun>
val INDUCT_TAC : tactic = <fun>
val NUM_REDUCE_TAC : tactic = <fun>
val LIST_INDUCT_TAC : tactic = <fun>
val REAL_ARITH_TAC : tactic = <fun>
val REAL_ARITH_TAC : tactic = <fun>
val ASM_REAL_ARITH_TAC : tactic = <fun>
val INT_ARITH_TAC : tactic = <fun>
val ASM_INT_ARITH_TAC : tactic = <fun>
val INTEGER_TAC : tactic = <fun>
val INTEGER_TAC : tactic = <fun>
val ARITH_TAC : tactic = <fun>
val ASM_ARITH_TAC : tactic = <fun>
val NUMBER_TAC : tactic = <fun>
val SET_TAC : thm list -> tactic = <fun>
