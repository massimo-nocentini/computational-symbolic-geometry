val AP_THM : thm -> term -> thm = <fun>
val ALPHA : term -> term -> thm = <fun>
val ALPHA_CONV : term -> term -> thm = <fun>
val GEN_ALPHA_CONV : term -> term -> thm = <fun>
val thenc_ : conv -> conv -> conv = <fun>
val orelsec_ : conv -> conv -> conv = <fun>
val FIRST_CONV : conv list -> conv = <fun>
val EVERY_CONV : conv list -> conv = <fun>
val REPEATC : conv -> conv = <fun>
val CHANGED_CONV : conv -> conv = <fun>
val TRY_CONV : conv -> conv = <fun>
val RATOR_CONV : conv -> conv = <fun>
val RAND_CONV : conv -> conv = <fun>
val LAND_CONV : conv -> conv = <fun>
val COMB2_CONV : conv -> conv -> conv = <fun>
val COMB_CONV : conv -> conv = <fun>
val ABS_CONV : conv -> conv = <fun>
val BINDER_CONV : conv -> term -> thm = <fun>
val SUB_CONV : conv -> term -> thm = <fun>
val BINOP_CONV : (term -> thm) -> term -> thm = <fun>
val ONCE_DEPTH_CONV : conv -> conv = <fun>
val DEPTH_CONV : conv -> conv = <fun>
val REDEPTH_CONV : conv -> conv = <fun>
val TOP_DEPTH_CONV : conv -> conv = <fun>
val TOP_SWEEP_CONV : conv -> conv = <fun>
val DEPTH_BINOP_CONV : term -> (term -> thm) -> term -> thm = <fun>
val PATH_CONV : string -> conv -> conv = <fun>
val PAT_CONV : term -> conv -> conv = <fun>
val SUBS_CONV : thm list -> term -> thm = <fun>
val CACHE_CONV : (term -> thm) -> term -> thm = <fun>
val DISJ1 : thm -> term -> thm = <fun>
val PART_MATCH : (term -> term) -> thm -> term -> thm = <fun>
val GEN_PART_MATCH : (term -> term) -> thm -> term -> thm = <fun>
val HIGHER_REWRITE_CONV : thm list -> bool -> term -> thm = <fun>
val REWR_CONV : thm -> term -> thm = <fun>
val IMP_REWR_CONV : thm -> term -> thm = <fun>
val ORDERED_REWR_CONV : (term -> term -> bool) -> thm -> term -> thm = <fun>
val apply_prover : prover -> term -> thm = <fun>
val GEN_REWRITE_CONV : (conv -> conv) -> thm list -> conv = <fun>
val PURE_REWRITE_CONV : thm list -> conv = <fun>
val REWRITE_CONV : thm list -> conv = <fun>
val PURE_ONCE_REWRITE_CONV : thm list -> conv = <fun>
val ONCE_REWRITE_CONV : thm list -> conv = <fun>
val ONCE_SIMPLIFY_CONV : simpset -> thm list -> conv = <fun>
val SIMPLIFY_CONV : simpset -> thm list -> conv = <fun>
val SIMP_CONV : thm list -> conv = <fun>
val PURE_SIMP_CONV : thm list -> conv = <fun>
val ONCE_SIMP_CONV : thm list -> conv = <fun>
val AC : thm -> term -> thm = <fun>
val GEN_NNF_CONV : bool -> conv * (term -> thm * thm) -> conv = <fun>
val ASSOC_CONV : thm -> term -> thm = <fun>
val PROP_ATOM_CONV : conv -> conv = <fun>
val MESON : thm list -> term -> thm = <fun>
val GABS_CONV : conv -> term -> thm = <fun>
val prove_recursive_functions_exist : thm -> term -> thm = <fun>
val new_recursive_definition : thm -> term -> thm = <fun>
val LIST_CONV : conv -> conv = <fun>
val REAL_IDEAL_CONV : term list -> term -> thm = <fun>
